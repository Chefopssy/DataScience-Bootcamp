CREATE DATABASE CHECKPOINT6;
USE CHECKPOINT6;

CREATE TABLE CUSTOMERS(
		CUSTOMER_ID INT PRIMARY KEY,
		CUSTOMER_NAME VARCHAR (30) NOT NULL,
		CUSTOMER_TEL VARCHAR (20) CHECK (CUSTOMER_TEL LIKE '[0-9][0-9][0-9]-[0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]'));
SELECT * FROM CUSTOMERS
DROP TABLE CUSTOMERS

CREATE TABLE PRODUCT (
		PRODUCT_ID INT PRIMARY KEY, 
		PRODUCT_NAME VARCHAR (30) NOT NULL,
		PRICE DECIMAL (20,01) CHECK (PRICE > 0) NOT NULL);
SELECT * FROM PRODUCT 

CREATE TABLE ORDERS (
		ORDERS_ID INT PRIMARY KEY,
		CUSTOMER_ID INT FOREIGN KEY REFERENCES CUSTOMERS (CUSTOMER_ID) NOT NULL,
		PRODUCT_ID INT FOREIGN KEY REFERENCES PRODUCT (PRODUCT_ID) NOT NULL,
		ORDERDATE DATE NOT NULL,
		QUANTITY INT NOT NULL, 
		TOTAL_AMOUNT INTEGER );
SELECT * FROM ORDERS


DROP TABLE ORDERS
ALTER TABLE ORDERS
DROP COLUMN TOTAL_AMOUNT;


INSERT INTO CUSTOMERS (CUSTOMER_ID, CUSTOMER_NAME, CUSTOMER_TEL)
VALUES (1, 'AHMED', '128-653-7788'),
		(2, 'COULIBALY', '543-436-7891'),
		(3, 'HASAN', '089-756-4231');
SELECT * FROM CUSTOMERS

UPDATE CUSTOMERS
SET CUSTOMER_NAME = 'ALICE'
WHERE CUSTOMER_NAME = 'AHMED'
SELECT * FROM CUSTOMERS

UPDATE CUSTOMERS
SET CUSTOMER_NAME = 'CHARLIE'
WHERE CUSTOMER_NAME = 'COULIBALY'
SELECT * FROM CUSTOMERS


INSERT INTO PRODUCT (PRODUCT_ID, PRODUCT_NAME, PRICE)
VALUES (1, 'WIDGET', 10),
(2, 'GADGET', 20),
(3, 'DOOHICKEY' , 15);
SELECT * FROM PRODUCT


INSERT INTO ORDERS (ORDERS_ID, CUSTOMER_ID, PRODUCT_ID, ORDERDATE, QUANTITY)
VALUES (1, 1, 1, '2021-01-01', 10),
		(2, 1, 2, '2021-01-02', 5), 
		(3, 2, 1, '2021-01-03', 3),
		(4, 2, 2, '2021-01-04', 7), 
		(5, 3, 1, '2021-01-05', 2),
		(6, 3, 3, '2021-01-06', 3);
SELECT * FROM ORDERS


SELECT ORDERS.ORDERS_ID, QUANTITY,
CUSTOMERS.CUSTOMER_NAME, PRODUCT.PRODUCT_NAME,
PRICE, ORDERS.ORDERDATE 
FROM ORDERS
INNER JOIN CUSTOMERS ON 
ORDERS.CUSTOMER_ID = CUSTOMERS.CUSTOMER_ID
INNER JOIN PRODUCT ON
ORDERS.PRODUCT_ID = PRODUCT.PRODUCT_ID

SELECT 
ORDERS.ORDERS_ID, QUANTITY, 
CUSTOMERS.CUSTOMER_NAME,
PRODUCT.PRODUCT_NAME, PRICE,
ORDERS.ORDERDATE, ORDERS.QUANTITY * PRODUCT.PRICE AS TOTAL_AMOUNT
FROM ORDERS 
INNER JOIN CUSTOMERS ON
ORDERS.CUSTOMER_ID = CUSTOMERS.CUSTOMER_ID
INNER JOIN PRODUCT ON 
ORDERS.PRODUCT_ID = PRODUCT.PRODUCT_ID


SELECT 
ORDERS.ORDERS_ID, QUANTITY,
CUSTOMERS.CUSTOMER_NAME,
PRODUCT.PRODUCT_NAME, PRICE,
ORDERS.ORDERDATE,
ORDERS.QUANTITY * PRODUCT.PRICE AS TOTAL_AMOUNT
FROM ORDERS
INNER JOIN CUSTOMERS ON 
ORDERS.CUSTOMER_ID = CUSTOMERS.CUSTOMER_ID
INNER JOIN PRODUCT ON
ORDERS.PRODUCT_ID = PRODUCT.PRODUCT_ID
WHERE PRODUCT_NAME IN ('WIDGET', 'GADGET') AND QUANTITY >= 1



SELECT 
ORDERS.ORDERS_ID, QUANTITY,
CUSTOMERS.CUSTOMER_NAME,
PRODUCT.PRODUCT_NAME, PRICE,
ORDERS.ORDERDATE, ORDERS.QUANTITY * PRODUCT.PRICE AS TOTAL_AMOUNT 
FROM ORDERS 
INNER JOIN CUSTOMERS ON 
ORDERS.CUSTOMER_ID = CUSTOMERS.CUSTOMER_ID
INNER JOIN PRODUCT ON
ORDERS.PRODUCT_ID = PRODUCT.PRODUCT_ID
WHERE PRODUCT_NAME = 'WIDGET' AND QUANTITY >= 1
ORDER BY CUSTOMER_NAME



SELECT 
ORDERS. ORDERS_ID, QUANTITY,
ORDERS.ORDERDATE, 
ORDERS.QUANTITY * PRODUCT.PRICE AS TOTAL_AMOUNT
FROM ORDERS 
INNER JOIN CUSTOMERS ON
ORDERS.CUSTOMER_ID = CUSTOMERS.CUSTOMER_ID
INNER JOIN PRODUCT ON
ORDERS.PRODUCT_ID = PRODUCT.PRODUCT_ID 
WHERE PRODUCT_NAME = 'GADGET' AND QUANTITY >= 1



SELECT 
ORDERS.ORDERS_ID, QUANTITY, 
CUSTOMERS.CUSTOMER_NAME, 
PRODUCT.PRODUCT_NAME, PRICE,
ORDERS.ORDERDATE,
ORDERS.QUANTITY * PRODUCT.PRICE AS TOTAL_AMOUNT
FROM ORDERS
INNER JOIN CUSTOMERS ON 
ORDERS.CUSTOMER_ID = CUSTOMERS.CUSTOMER_ID
INNER JOIN PRODUCT ON 
ORDERS.PRODUCT_ID = PRODUCT.PRODUCT_ID
WHERE PRODUCT_NAME = 'DOOHICKEY' AND QUANTITY >= 1
ORDER BY CUSTOMER_NAME



SELECT * FROM
CUSTOMERS AS C 
INNER JOIN ORDERS AS O
ON C.CUSTOMER_ID = O.CUSTOMER_ID
INNER JOIN PRODUCT AS P 
ON O.PRODUCT_ID = P.PRODUCT_ID



SELECT *, O.QUANTITY * P.PRICE AS TOTAL_COST 
FROM CUSTOMERS AS C 
INNER JOIN ORDERS AS O 
ON C.CUSTOMER_ID = O.CUSTOMER_ID
INNER JOIN PRODUCT AS P 
ON O.PRODUCT_ID = P.PRODUCT_ID



SELECT C.CUSTOMER_NAME, COUNT(*) AS TOTAL_COUNT, O.QUANTITY * P.PRICE AS TOTAL_COST
FROM CUSTOMERS AS C
INNER JOIN ORDERS AS O 
ON C.CUSTOMER_ID = O.CUSTOMER_ID
INNER JOIN PRODUCT AS P
ON O.PRODUCT_ID = P.PRODUCT_ID
WHERE P.PRODUCT_NAME IN ('WIDGET', 'GADGET')
GROUP BY C.CUSTOMER_NAME, P.PRICE, O.QUANTITY



SELECT PRODUCT.PRODUCT_NAME,
SUM (ORDERS.QUANTITY) AS TOTAL_QUANTITY
FROM PRODUCT
JOIN ORDERS
ON ORDERS.PRODUCT_ID = PRODUCT.PRODUCT_ID
GROUP BY PRODUCT.PRODUCT_NAME
HAVING SUM (ORDERS.QUANTITY) >= 1;


SELECT CUSTOMERS.CUSTOMER_NAME, COUNT (ORDERS_ID) AS TOTAL_ORDERS
FROM CUSTOMERS
JOIN ORDERS
ON CUSTOMERS. CUSTOMER_ID = ORDERS.CUSTOMER_ID
GROUP BY CUSTOMERS.CUSTOMER_NAME


SELECT PRODUCT.PRODUCT_NAME,
SUM (ORDERS.QUANTITY) AS TOTAL_QUANTITY 
FROM PRODUCT 
JOIN ORDERS 
ON PRODUCT.PRODUCT_ID = ORDERS.PRODUCT_ID
GROUP BY PRODUCT.PRODUCT_NAME
ORDER BY TOTAL_QUANTITY DESC;




SELECT CUSTOMERS.CUSTOMER_NAME,
COUNT (DISTINCT ORDERS.ORDERS_ID) AS TOTALDAYORDERS 
FROM CUSTOMERS
JOIN ORDERS
ON CUSTOMERS.CUSTOMER_ID = ORDERS.CUSTOMER_ID
GROUP BY CUSTOMERS.CUSTOMER_NAME
HAVING COUNT (DISTINCT DATEPART (WEEKDAY, ORDERS.ORDERDATE)) = 7









		


